name: CI - Backend & Frontend

on:
  pull_request:
    branches: [development]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend-tests:
    name: Backend â€¢ ${{ matrix.service }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [product_service, order_service]
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Install deps
        working-directory: backend/${{ matrix.service }}
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest
      - name: Run tests
        working-directory: backend/${{ matrix.service }}
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: "5432"
          POSTGRES_DB: testdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest -q

  frontend-tests:
    name: Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Install
        working-directory: frontend
        run: |
          if [ -f package-lock.json ]; then npm ci; elif [ -f package.json ]; then npm i; fi
      - name: Tests
        working-directory: frontend
        env: { CI: "true" }
        run: npm test --silent --if-present
